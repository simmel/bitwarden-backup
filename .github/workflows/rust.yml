name: Rust

on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          # - beta
          # - nightly
          # - 1.56.0  # MSRV

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        name: Install toolchain
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1

      - uses: actions-rs/cargo@v1
        name: Build
        with:
          command: build
          args: --verbose

      - uses: actions-rs/cargo@v1
        name: Test
        with:
          command: test
          args: --verbose

      - uses: actions-rs/cargo@v1
        name: Format
        with:
          command: fmt
          args: --all -- --check

      - uses: actions-rs/cargo@v1
        name: Lint
        with:
          command: clippy

      - name: Memory erasure
        run: |
          sudo apt update && sudo apt install gdb
          (sleep 0.5 && cat tests/bitwarden_export.json > /tmp/gurken) &
          rust-gdb -batch -x bitwarden-backup.gdb --args target/debug/bitwarden-backup -v -v --path /tmp/gurken&
          wait && ! grep -qa my-secret-key bitwarden-backup.core

  integration-test:

    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # Windows won't be fixed util https://github.com/Eolu/ipipe/issues/13
          # or #1 is fixed.
          # - windows-latest
          - macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        name: Install toolchain
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1

      - uses: actions-rs/cargo@v1
        name: Test
        with:
          command: test
          args: --verbose

      - uses: actions-rs/cargo@v1
        name: Integration test
        with:
          command: build
          args: --release

      - name: Integration test
        run: |
          target/release/bitwarden-backup -v -v --path /tmp/gurken& sleep 0.5 && cat tests/bitwarden_export.json > /tmp/gurken

      - name: Get release-name
        if: startsWith(github.ref, 'refs/tags/')
        id: release
        run: |
          echo ::set-output name=name::bitwarden-backup-${GITHUB_REF##*/}-$(rustc -vV | sed -n 's|host: ||p').zip

      - name: Prepare release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          zip --junk-paths ${{ steps.release.outputs.name }} target/release/bitwarden-backup

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            bitwarden-backup-*.zip
